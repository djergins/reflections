What happens when you initialize a repository? Why do you need to do it?

it creates the .git file that keeps track of the repository and holds metadata
for the repository.

How is the staging area different from the working directory and the repository? What value do you think it offers? 

The staging area is where you place files that you intend to commit to your git repository. This is useful because it gives you the ability to customize what you wish to commit to your repo.

How can you use the staging area to make sure you have one commit per logical change?

Commit only the changes that are pertinent to the logical change that you wish to implement. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches are helpful if you want to experiment with new coding possibilities without having to checkout back and forth on a single branch.

How do the diagrams help you visualize the branch structure?

It helps to understand where branches beging and what commits are reachable on a branch. 

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The code from the two branches is merged together to make a new commit on master.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

You don't want to have git always automatically merge because the code might not always merge in a logical fashion that the programmer intended. However, if you always had to manually merge everything, the time lost in development would be extensive.



